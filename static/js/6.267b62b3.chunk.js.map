{"version":3,"sources":["constants/apiConstants.ts","api/axiosClient.ts","api/moviesApi.ts","pages/MovieDetails/index.module.css","../node_modules/@material-ui/icons/Star.js","../node_modules/@material-ui/core/esm/Divider/Divider.js","pages/MovieDetails/Skeleton.tsx","pages/MovieDetails/index.tsx"],"names":["BASE_API_URL","getImageFullPath","imageRelativePath","axiosClient","axios","create","baseURL","process","REACT_APP_API_URL","headers","interceptors","request","use","config","params","api_key","response","data","error","Promise","reject","moviesApi","getListMoviesTheaters","url","get","getListMoviesTopRated","getDataDetailMovies","movieId","module","exports","_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","value","default","React","_default","createElement","d","Divider","props","ref","_props$absolute","absolute","classes","className","_props$component","component","Component","_props$flexItem","flexItem","_props$light","light","_props$orientation","orientation","_props$role","role","undefined","_props$variant","variant","other","_objectWithoutProperties","_extends","clsx","root","vertical","withStyles","theme","height","margin","border","flexShrink","backgroundColor","palette","divider","position","bottom","left","width","inset","marginLeft","alpha","middle","spacing","marginRight","alignSelf","name","Skeleton","Grid","container","justify","item","xs","sm","styles","detailsSection","titleContainer","plot","Array","map","_","i","metaData","md","metaLabel","metaValue","MovieDetails","useParams","fetchDetailMovies","dataResponse","poster_path","id","title","vote_average","production_countries","vote_count","release_date","overview","runtime","genres","spoken_languages","genresString","x","join","languageString","countryString","releaseDate","poster","voteAverage","Math","round","voteCount","country","language","console","log","useQuery","enabled","isSuccess","isLoading","src","alt","ratingsRoot","fontSize","htmlColor","ratingsContainer","votes","subInfo","JSON","stringify"],"mappings":"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","file":"static/js/6.267b62b3.chunk.js","sourcesContent":["export const BASE_API_URL = \"https://api.themoviedb.org/3/\";\n\nexport const BASE_MOVIES_SECTION_URL = \"movie\";\nexport const BASE_TV_SECTION_URL = \"tv\";\n\nexport function getImageFullPath(imageRelativePath: string) {\n  return `https://image.tmdb.org/t/p/original/${imageRelativePath}`;\n}\n\nexport function getURLWithoutCORS(url: string) {\n  return `https://corsproxy.io/?${url}`;\n}\n","import axios from \"axios\";\n\n// Set up default config for http requests here\n// Please have a look at here `https://github.com/axios/axios#request- config` for the full list of configs\nconst axiosClient = axios.create({\n  baseURL: process.env.REACT_APP_API_URL,\n  headers: {\n    \"content-type\": \"application/json\",\n  },\n});\n\naxiosClient.interceptors.request.use(async (config) => {\n  return {\n    ...config,\n    params: {\n      ...config.params,\n      api_key: process.env.REACT_APP_API_KEY_MOVIE_DB,\n    },\n  };\n});\n\naxiosClient.interceptors.response.use(\n  (response) => {\n    if (response && response.data) {\n      return response.data;\n    }\n\n    return response;\n  },\n  (error) => {\n    // Handle errors\n    return Promise.reject(error);\n  }\n);\n\nexport default axiosClient;\n","import { BASE_API_URL } from \"constants/apiConstants\";\nimport axiosClient from \"./axiosClient\";\n\nexport type GetListMoviesTheatersProps = {\n  page?: number;\n  keyword?: string;\n};\n\nconst moviesApi = {\n  getListMoviesTheaters: (params?: GetListMoviesTheatersProps) => {\n    const url = `${BASE_API_URL}/movie/now_playing`;\n    return axiosClient.get(url, { params });\n  },\n\n  getListMoviesTopRated: (params?: GetListMoviesTheatersProps) => {\n    const url = `${BASE_API_URL}/movie/top_rated`;\n    return axiosClient.get(url, { params });\n  },\n\n  getDataDetailMovies: (movieId: string) => {\n    const url = `${BASE_API_URL}/movie/${movieId}`;\n    return axiosClient.get(url);\n  },\n};\n\nexport default moviesApi;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"MovieDetails_root__QOsVz\",\"detailsSection\":\"MovieDetails_detailsSection__QyNSZ\",\"titleContainer\":\"MovieDetails_titleContainer__3x94U\",\"title\":\"MovieDetails_title__3kgDN\",\"ratingsRoot\":\"MovieDetails_ratingsRoot__12OhW\",\"ratingsContainer\":\"MovieDetails_ratingsContainer__4XoZ6\",\"votes\":\"MovieDetails_votes__eju_8\",\"subInfo\":\"MovieDetails_subInfo__3z7W4\",\"plot\":\"MovieDetails_plot__2ehAB\",\"metaData\":\"MovieDetails_metaData__3M05N\",\"metaLabel\":\"MovieDetails_metaLabel__3I2wI\",\"metaValue\":\"MovieDetails_metaValue__1o7xY\"};","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z\"\n}), 'Star');\n\nexports.default = _default;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { alpha } from '../styles/colorManipulator';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      height: 1,\n      margin: 0,\n      // Reset browser default style.\n      border: 'none',\n      flexShrink: 0,\n      backgroundColor: theme.palette.divider\n    },\n\n    /* Styles applied to the root element if `absolute={true}`. */\n    absolute: {\n      position: 'absolute',\n      bottom: 0,\n      left: 0,\n      width: '100%'\n    },\n\n    /* Styles applied to the root element if `variant=\"inset\"`. */\n    inset: {\n      marginLeft: 72\n    },\n\n    /* Styles applied to the root element if `light={true}`. */\n    light: {\n      backgroundColor: alpha(theme.palette.divider, 0.08)\n    },\n\n    /* Styles applied to the root element if `variant=\"middle\"`. */\n    middle: {\n      marginLeft: theme.spacing(2),\n      marginRight: theme.spacing(2)\n    },\n\n    /* Styles applied to the root element if `orientation=\"vertical\"`. */\n    vertical: {\n      height: '100%',\n      width: 1\n    },\n\n    /* Styles applied to the root element if `flexItem={true}`. */\n    flexItem: {\n      alignSelf: 'stretch',\n      height: 'auto'\n    }\n  };\n};\nvar Divider = /*#__PURE__*/React.forwardRef(function Divider(props, ref) {\n  var _props$absolute = props.absolute,\n      absolute = _props$absolute === void 0 ? false : _props$absolute,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'hr' : _props$component,\n      _props$flexItem = props.flexItem,\n      flexItem = _props$flexItem === void 0 ? false : _props$flexItem,\n      _props$light = props.light,\n      light = _props$light === void 0 ? false : _props$light,\n      _props$orientation = props.orientation,\n      orientation = _props$orientation === void 0 ? 'horizontal' : _props$orientation,\n      _props$role = props.role,\n      role = _props$role === void 0 ? Component !== 'hr' ? 'separator' : undefined : _props$role,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'fullWidth' : _props$variant,\n      other = _objectWithoutProperties(props, [\"absolute\", \"classes\", \"className\", \"component\", \"flexItem\", \"light\", \"orientation\", \"role\", \"variant\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, variant !== 'fullWidth' && classes[variant], absolute && classes.absolute, flexItem && classes.flexItem, light && classes.light, orientation === 'vertical' && classes.vertical),\n    role: role,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Divider.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Absolutely position the element.\n   */\n  absolute: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, a vertical divider will have the correct height when used in flex container.\n   * (By default, a vertical divider will have a calculated height of `0px` if it is the child of a flex container.)\n   */\n  flexItem: PropTypes.bool,\n\n  /**\n   * If `true`, the divider will have a lighter color.\n   */\n  light: PropTypes.bool,\n\n  /**\n   * The divider orientation.\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n\n  /**\n   * @ignore\n   */\n  role: PropTypes.string,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['fullWidth', 'inset', 'middle'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDivider'\n})(Divider);","import styles from \"./index.module.css\";\nimport { default as MuiSkeleton } from \"@material-ui/lab/Skeleton\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Divider from \"@material-ui/core/Divider\";\n\nconst Skeleton = (): React.ReactElement => {\n  return (\n    <Grid container justify=\"center\">\n      <Grid item xs={12} sm={10}>\n        <Grid container>\n          <Grid item xs={12} sm={4}>\n            <MuiSkeleton variant=\"rect\" height={500} width=\"100%\" />\n          </Grid>\n          <Grid item xs={12} sm={8} className={styles.detailsSection}>\n            <div className={styles.titleContainer}>\n              <MuiSkeleton variant=\"text\" height={80} width=\"70%\" />\n              <MuiSkeleton variant=\"text\" height={80} width=\"20%\" />\n            </div>\n\n            <div className={styles.plot}>\n              <MuiSkeleton variant=\"text\" height={40} width=\"100%\" />\n              <MuiSkeleton variant=\"text\" height={40} width=\"80%\" />\n              <MuiSkeleton variant=\"text\" height={40} width=\"60%\" />\n              <MuiSkeleton variant=\"text\" height={40} width=\"90%\" />\n            </div>\n\n            <Divider light={false} />\n\n            {[...new Array(3)].map((_, i) => (\n              <Grid container key={i} className={styles.metaData}>\n                <Grid item xs={3} md={2} className={styles.metaLabel}>\n                  <MuiSkeleton variant=\"text\" height={40} width=\"90%\" />\n                </Grid>\n                <Grid item xs={9} md={10} className={styles.metaValue}>\n                  <MuiSkeleton variant=\"text\" height={40} width=\"90%\" />\n                </Grid>\n              </Grid>\n            ))}\n          </Grid>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Skeleton;\n","import { ReactElement } from \"react\";\nimport styles from \"./index.module.css\";\nimport { useParams } from \"react-router-dom\";\nimport { useQuery } from \"react-query\";\n// import service from \"utils/service\";\n// import CONSTANTS from \"utils/constants\";\nimport { Grid } from \"@material-ui/core\";\nimport StarIcon from \"@material-ui/icons/Star\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Skeleton from \"./Skeleton\";\nimport moviesApi from \"api/moviesApi\";\nimport { getImageFullPath } from \"constants/apiConstants\";\n\nconst MovieDetails = (): ReactElement => {\n  const { movieId } = useParams<{ movieId: string }>();\n\n  const fetchDetailMovies = async () => {\n    try {\n      const dataResponse: any = await moviesApi.getDataDetailMovies(movieId);\n      const {\n        poster_path,\n        id,\n        title,\n        vote_average,\n        production_countries,\n        vote_count,\n        release_date,\n        overview,\n        runtime,\n        genres,\n        spoken_languages,\n      } = dataResponse;\n\n      const genresString = (genres || []).map((x: any) => x.name).join(\", \");\n      const languageString = (spoken_languages || [])\n        .map((x: any) => x.name)\n        .join(\", \");\n      const countryString = (production_countries || [])\n        .map((x: any) => x.name)\n        .join(\", \");\n\n      return {\n        title,\n        id,\n        runtime,\n        releaseDate: release_date,\n        poster: getImageFullPath(poster_path),\n        overview,\n        voteAverage: Math.round(vote_average * 10) / 10,\n        voteCount: vote_count,\n        genres: genresString,\n        country: countryString,\n        language: languageString,\n      };\n    } catch (error) {\n      console.log(\"🚀 ~ file: index.tsx:21 ~ fetchDetailMovies ~ error\", error);\n    }\n  };\n\n  const { isSuccess, isLoading, error, data } = useQuery(\n    [`movie`, movieId],\n    fetchDetailMovies,\n    {\n      enabled: !!movieId,\n    }\n  );\n\n  return (\n    <div className={styles.root}>\n      {/* Loading state */}\n      {isLoading && <Skeleton />}\n\n      {/* Success state */}\n      {isSuccess && (\n        // <div style={{ height: '100vh' }}>\n        <Grid container justify=\"center\">\n          <Grid item xs={12} sm={10}>\n            <Grid container>\n              <Grid item xs={12} sm={4}>\n                <img\n                  src={data?.poster}\n                  alt={data?.title}\n                  height=\"600\"\n                  width=\"100%\"\n                />\n              </Grid>\n              <Grid item xs={12} sm={8} className={styles.detailsSection}>\n                <div className={styles.titleContainer}>\n                  <div className={styles.title}>{data?.title}</div>\n                  <div className={styles.ratingsRoot}>\n                    <StarIcon fontSize=\"large\" htmlColor=\"#e4bb24\" />\n                    <div>\n                      <div className={styles.ratingsContainer}>\n                        {data?.voteAverage}\n                        <i>/10</i>\n                      </div>\n                      <div className={styles.votes}>{data?.voteCount}</div>\n                    </div>\n                  </div>\n                </div>\n\n                <div className={styles.subInfo}>\n                  {/* <div>{data.Year}</div> */}\n                  {/* <div>{data.Rated}</div> */}\n                  <div>{data?.releaseDate}</div>\n                  <div>{data?.runtime} min</div>\n                </div>\n\n                <div className={styles.plot}>{data?.overview}</div>\n\n                <Divider light={false} />\n\n                <Grid container className={styles.metaData}>\n                  <Grid item xs={3} md={2} className={styles.metaLabel}>\n                    Genre :\n                  </Grid>\n                  <Grid item xs={9} md={10} className={styles.metaValue}>\n                    {data?.genres}\n                  </Grid>\n                </Grid>\n                {/* <Grid container className={styles.metaData}>\n                  <Grid item xs={3} md={2} className={styles.metaLabel}>\n                    Director :\n                  </Grid>\n                  <Grid item xs={9} md={10} className={styles.metaValue}>\n                    {data.Director}\n                  </Grid>\n                </Grid> */}\n                {/* <Grid container className={styles.metaData}>\n                  <Grid item xs={3} md={2} className={styles.metaLabel}>\n                    Writer :\n                  </Grid>\n                  <Grid item xs={9} md={10} className={styles.metaValue}>\n                    {data.Writer}\n                  </Grid>\n                </Grid> */}\n                {/* <Grid container className={styles.metaData}>\n                  <Grid item xs={3} md={2} className={styles.metaLabel}>\n                    Actors :\n                  </Grid>\n                  <Grid item xs={9} md={10} className={styles.metaValue}>\n                    {data.Actors}\n                  </Grid>\n                </Grid> */}\n                <Grid container className={styles.metaData}>\n                  <Grid item xs={3} md={2} className={styles.metaLabel}>\n                    Language :\n                  </Grid>\n                  <Grid item xs={9} md={10} className={styles.metaValue}>\n                    {data?.language}\n                  </Grid>\n                </Grid>\n                <Grid container className={styles.metaData}>\n                  <Grid item xs={3} md={2} className={styles.metaLabel}>\n                    Country :\n                  </Grid>\n                  <Grid item xs={9} md={10} className={styles.metaValue}>\n                    {data?.country}\n                  </Grid>\n                </Grid>\n                {/* <Grid container className={styles.metaData}>\n                  <Grid item xs={3} md={2} className={styles.metaLabel}>\n                    Overview :\n                  </Grid>\n                  <Grid item xs={9} md={10} className={styles.metaValue}>\n                    {data.overview}\n                  </Grid>\n                </Grid> */}\n                {/* <Grid container className={styles.metaData}>\n                  <Grid item xs={3} md={2} className={styles.metaLabel}>\n                    Production :\n                  </Grid>\n                  <Grid item xs={9} md={10} className={styles.metaValue}>\n                    {data.Production}\n                  </Grid>\n                </Grid> */}\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n        // </div>\n      )}\n\n      {/* Error state */}\n      {!!error && <div>{JSON.stringify(error)}</div>}\n    </div>\n  );\n};\n\nexport default MovieDetails;\n"],"sourceRoot":""}